<Window x:Class="ChemGateBuilder.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ChemGateBuilder"
        xmlns:converters="clr-namespace:ChemGateBuilder.Core.Converters"
        xmlns:fluent="urn:fluent-ribbon"
        mc:Ignorable="d"
        Title="Chem Gate Builder" MinWidth="1200" MinHeight="940">
    <Window.Resources>
        <DataTemplate x:Key="SectorTemplate">
            <StackPanel Orientation="Horizontal" Margin="0">
                <TextBlock Text="{Binding Name}" Margin="0" Width="200"/>
                <TextBlock Text="{Binding Source}" Margin="0" Foreground="Gray" />
            </StackPanel>
        </DataTemplate>
        <converters:HexagonPointsConverter x:Key="HexagonPointsConverter" />
        <Style TargetType="ComboBoxItem">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Selectable}" Value="False">
                    <Setter Property="Foreground" Value="Gray"/>
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="RightAlignedTextBlockStyle" TargetType="TextBlock">
            <Setter Property="TextAlignment" Value="Right"/>
        </Style>
        <Style x:Key="RightAlignedTextBoxStyle" TargetType="TextBox">
            <Setter Property="TextAlignment" Value="Right"/>
        </Style>
        <Style x:Key="DataGridCenterColumnHeaderStyle" TargetType="DataGridColumnHeader">
            <Setter Property="HorizontalContentAlignment" Value="Center" />
        </Style>
        <Style x:Key="CoordinatesTextBoxStyle" TargetType="TextBox">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="MinWidth" Value="40"/>
            <Setter Property="local:TextBoxExtensions.IsIntegerOnly" Value="True"/>
            <Setter Property="local:TextBoxExtensions.MinValue" Value="{Binding SectorRadiusNegative}"/>
            <Setter Property="local:TextBoxExtensions.MaxValue" Value="{Binding SectorRadius}"/>
            <Setter Property="TextAlignment" Value="Right"/>
        </Style>
        <Style x:Key="PositionTextBoxStyle" TargetType="TextBox">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="MinWidth" Value="40"/>
            <Setter Property="local:TextBoxExtensions.IsIntegerOnly" Value="True"/>
            <Setter Property="local:TextBoxExtensions.MinValue" Value="-999"/>
            <Setter Property="local:TextBoxExtensions.MaxValue" Value="999"/>
            <Setter Property="TextAlignment" Value="Right"/>
        </Style>
        <Style x:Key="RotationTextBoxStyle" TargetType="TextBox">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="MinWidth" Value="40"/>
            <Setter Property="local:TextBoxExtensions.IsIntegerOnly" Value="True"/>
            <Setter Property="local:TextBoxExtensions.MinValue" Value="-180"/>
            <Setter Property="local:TextBoxExtensions.MaxValue" Value="180"/>
            <Setter Property="TextAlignment" Value="Right"/>
        </Style>
    </Window.Resources>
    <DockPanel>
        <fluent:Ribbon DockPanel.Dock="Top">
            <fluent:RibbonTabItem Header="Mod">
                <fluent:RibbonGroupBox Header="Mod Actions">
                    <fluent:Button Header="New" IsEnabled="{Binding IsModCanBeCreated}"/>
                    <fluent:Button Header="Load" IsEnabled="{Binding IsDataLoaded}"/>
                    <fluent:Button Header="Save" IsEnabled="{Binding IsModCanBeSaved}"/>
                    <fluent:Button Header="Exit" Click="ButtonExit_Click" />
                </fluent:RibbonGroupBox>
            </fluent:RibbonTabItem>
            <fluent:RibbonTabItem Header="X4 Data">
                <fluent:RibbonGroupBox Header="X4 Data Actions">
                    <fluent:Button Header="Load" />
                </fluent:RibbonGroupBox>
            </fluent:RibbonTabItem>
            <fluent:RibbonTabItem Header="Options">
                <fluent:RibbonGroupBox Header="Edit Options">
                    <Grid Margin="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Label Content="Gates Active by Default:" Grid.Row="0" Grid.Column="0" VerticalAlignment="Center"/>
                        <CheckBox Margin="1" VerticalAlignment="Center" Grid.Row="0" Grid.Column="1" IsChecked="{Binding GatesActiveByDefault}"/>
                        <Label Content="Minimal Distance Between Gates, km:" Grid.Row="1" Grid.Column="0"  VerticalAlignment="Center"/>
                        <TextBox Width="100" Margin="2"
                                Grid.Row="1" Grid.Column="1"
                                Text="{Binding GatesMinimalDistanceBetween}"
                                local:TextBoxExtensions.IsIntegerOnly="True"
                                local:TextBoxExtensions.MinValue="0"
                                local:TextBoxExtensions.MaxValue="99"
                                Style="{StaticResource RightAlignedTextBoxStyle}"
                                VerticalAlignment="Center" HorizontalAlignment="Right"/>
                        <Label Content='Sector "Radius", km:' Grid.Row="2" Grid.Column="0"  VerticalAlignment="Center"/>
                        <TextBox Width="100" Margin="2"
                                Grid.Row="2" Grid.Column="1"
                                local:TextBoxExtensions.IsIntegerOnly="True"
                                local:TextBoxExtensions.MinValue="0"
                                local:TextBoxExtensions.MaxValue="999"
                                Style="{StaticResource RightAlignedTextBoxStyle}"
                                Text="{Binding SectorRadius}"
                                VerticalAlignment="Center" HorizontalAlignment="Right"/>
                    </Grid>
                </fluent:RibbonGroupBox>
                <fluent:RibbonGroupBox Header="X4 Data Options">
                    <StackPanel Orientation="Vertical" Margin="0">
                         <StackPanel Orientation="Horizontal" Margin="5">
                            <Label Content="X4 Data Extracted" Margin="5"/>
                            <Button Content="Select" Click="SelectX4DataFolder_Click" Margin="5"/>
                        </StackPanel>
                        <TextBlock Text="{Binding X4DataFolderStatus}" Width="200" Margin="5" ToolTip="{Binding X4DataFolderStatus}"/>
                    </StackPanel>
                </fluent:RibbonGroupBox>
                <fluent:RibbonGroupBox Header="Logging Options">
                    <StackPanel>
                        <ComboBox
                            x:Name="LoggingLevelComboBox"
                            Margin="5"
                            SelectedValuePath="Content"
                            SelectedValue="{Binding LogLevel, Mode=TwoWay}">
                            <ComboBoxItem Content="Error"/>
                            <ComboBoxItem Content="Warning"/>
                            <ComboBoxItem Content="Info"/>
                            <ComboBoxItem Content="Debug"/>
                        </ComboBox>
                        <CheckBox Content="Enable Writing to File" Margin="5" IsChecked="{Binding LogToFile}"/>
                    </StackPanel>
                </fluent:RibbonGroupBox>
            </fluent:RibbonTabItem>
            <fluent:RibbonTabItem Header="Help">
                <fluent:RibbonGroupBox Header="Help Actions">
                    <fluent:Button Header="About" />
                </fluent:RibbonGroupBox>
            </fluent:RibbonTabItem>
        </fluent:Ribbon>
        <DockPanel LastChildFill="True" IsEnabled="{Binding IsDataLoaded}">
            <!-- StatusBar Docked to Bottom -->
            <StatusBar DockPanel.Dock="Bottom">
                <StatusBarItem>
                    <TextBlock Text="{Binding StatusMessage}" />
                </StatusBarItem>
            </StatusBar>
            <GroupBox Header="Chem Gate Builder" DockPanel.Dock="Top" Margin="5">
                <DockPanel  VerticalAlignment="Stretch" LastChildFill="True">
                    <GroupBox Header="Gates" Margin="5" DockPanel.Dock="Bottom">
                        <StackPanel Orientation="Vertical" Margin="5">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <GroupBox Header="Gate Direct" Grid.Column="0" Margin="5">
                                <StackPanel>
                                    <Grid Margin="5">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Label Content="Sector:" Grid.Column="0" VerticalAlignment="Center"/>
                                        <!-- Sector Direct ComboBox -->
                                        <ComboBox
                                            x:Name="SectorDirectComboBox"
                                            Grid.Column="1"
                                            Margin="5"
                                            ItemsSource="{Binding SectorsDirectViewSource.View}"
                                            SelectedItem="{Binding GatesConnectionCurrent.SectorDirect, Mode=TwoWay}"
                                            SelectedValuePath="Macro"
                                            ItemTemplate="{StaticResource SectorTemplate}" />
                                    </Grid>
                                    <GroupBox Header="Sector Info" Margin="5">
                                        <DockPanel>
                                            <Canvas x:Name="SectorDirectCanvas" Background="Black" DockPanel.Dock="Left" Width="200" Height="200" Margin="5"
                                                SizeChanged="SectorDirectCanvas_SizeChanged">
                                                <!-- Hexagonal Sector Representation -->
                                                <Polygon x:Name="SectorDirectHexagon" Points="{Binding GatesConnectionCurrent.SectorDirectMap.VisualSizePx, Converter={StaticResource HexagonPointsConverter}}"
                                                        Stroke="White"
                                                        StrokeThickness="2"
                                                        Fill="Gray"
                                                        Canvas.Left="{Binding GatesConnectionCurrent.SectorDirectMap.VisualX}"
                                                        Canvas.Top="{Binding GatesConnectionCurrent.SectorDirectMap.VisualY}" />
                                                <!-- Gates Representation -->
                                                <ItemsControl ItemsSource="{Binding GatesConnectionCurrent.SectorDirectMap.Items}">
                                                    <ItemsControl.ItemsPanel>
                                                        <ItemsPanelTemplate>
                                                            <Canvas />
                                                        </ItemsPanelTemplate>
                                                    </ItemsControl.ItemsPanel>
                                                    <ItemsControl.ItemTemplate>
                                                        <DataTemplate>
                                                            <Ellipse Width="{Binding ItemSizePx}" Height="{Binding ItemSizePx}"
                                                                    Fill="{Binding FillColor}"
                                                                    Stroke="{Binding BorderColor}"
                                                                    StrokeThickness="2"
                                                                    PreviewMouseLeftButtonDown="SectorDirectMapItem_MouseLeftButtonDown"
                                                                    MouseMove="SectorDirectMapItem_MouseMove"
                                                                    MouseLeftButtonUp="SectorDirectMapItem_MouseLeftButtonUp">
                                                                    <!-- by some reason this binding doesn't work
                                                                    Canvas.Left="{Binding X}"
                                                                    Canvas.Top="{Binding Y}"
                                                                    -->
                                                                <Ellipse.RenderTransform>
                                                                    <TranslateTransform X="{Binding X}" Y="{Binding Y}" />
                                                                </Ellipse.RenderTransform>
                                                                <Ellipse.ToolTip>
                                                                    <ToolTip Content="{Binding ToolTip}" />
                                                                </Ellipse.ToolTip>
                                                            </Ellipse>
                                                        </DataTemplate>
                                                    </ItemsControl.ItemTemplate>
                                                </ItemsControl>
                                            </Canvas>
                                            <DataGrid ItemsSource="{Binding GatesConnectionCurrent.SectorDirectConnections}"
                                                      SelectedItem="{Binding GatesConnectionCurrent.SectorDirectSelectedConnection, Mode=TwoWay}"
                                                      ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                                      AutoGenerateColumns="False"
                                                      Margin="5"
                                                      CanUserAddRows="False"
                                                      IsReadOnly="True"
                                                      SelectionMode="Single"
                                                      MinHeight="160">
                                                <DataGrid.Columns>
                                                    <DataGridTextColumn Header="To Sector" Binding="{Binding ToSector}" Width="200"/>
                                                    <DataGridTextColumn Header="X" Binding="{Binding X}" Width="40" ElementStyle="{StaticResource RightAlignedTextBlockStyle}" HeaderStyle="{StaticResource DataGridCenterColumnHeaderStyle}"/>
                                                    <DataGridTextColumn Header="Y" Binding="{Binding Y}" Width="40" ElementStyle="{StaticResource RightAlignedTextBlockStyle}" HeaderStyle="{StaticResource DataGridCenterColumnHeaderStyle}"/>
                                                    <DataGridTextColumn Header="Z" Binding="{Binding Z}" Width="40" ElementStyle="{StaticResource RightAlignedTextBlockStyle}" HeaderStyle="{StaticResource DataGridCenterColumnHeaderStyle}"/>
                                                    <DataGridTextColumn Header="Type" Binding="{Binding Type}" Width="50"/>
                                                    <DataGridTextColumn Header="Id" Binding="{Binding Id}" Width="200"/>
                                                </DataGrid.Columns>
                                            </DataGrid>
                                        </DockPanel>
                                    </GroupBox>
                                    <GroupBox Header="Gate Parameters" Margin="5">
                                        <Grid Margin="5">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Label Content="Gate Coordinates (km):" Grid.Row="0" Grid.Column="0" VerticalAlignment="Center"/>
                                            <Label Content="X:" Grid.Row="0" Grid.Column="1" VerticalAlignment="Center"/>
                                            <TextBox Grid.Row="0" Grid.Column="2"
                                                    Style="{StaticResource CoordinatesTextBoxStyle}"
                                                    Text="{Binding GatesConnectionCurrent.GateDirect.Coordinates.X, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <Label Content="Y:" Grid.Row="0" Grid.Column="3" VerticalAlignment="Center"/>
                                            <TextBox Grid.Row="0" Grid.Column="4"
                                                    Style="{StaticResource CoordinatesTextBoxStyle}"
                                                    Text="{Binding GatesConnectionCurrent.GateDirect.Coordinates.Y, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <Label Content="Z:" Grid.Row="0" Grid.Column="5" VerticalAlignment="Center"/>
                                            <TextBox Grid.Row="0" Grid.Column="6"
                                                    Style="{StaticResource CoordinatesTextBoxStyle}"
                                                    Text="{Binding GatesConnectionCurrent.GateDirect.Coordinates.Z, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <Label Content="Gate Position (m):" Grid.Row="1" Grid.Column="0" VerticalAlignment="Center"/>
                                            <Label Content="X:" Grid.Row="1" Grid.Column="1" VerticalAlignment="Center"/>
                                            <TextBox Grid.Row="1" Grid.Column="2"
                                                    Style="{StaticResource PositionTextBoxStyle}"
                                                    Text="{Binding GatesConnectionCurrent.GateDirect.Position.X, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <Label Content="Y:" Grid.Row="1" Grid.Column="3" VerticalAlignment="Center"/>
                                            <TextBox Grid.Row="1" Grid.Column="4"
                                                    Style="{StaticResource PositionTextBoxStyle}"
                                                    Text="{Binding GatesConnectionCurrent.GateDirect.Position.Y, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <Label Content="Z:" Grid.Row="1" Grid.Column="5" VerticalAlignment="Center"/>
                                            <TextBox Grid.Row="1" Grid.Column="6"
                                                    Style="{StaticResource PositionTextBoxStyle}"
                                                    Text="{Binding GatesConnectionCurrent.GateDirect.Position.Z, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <Label Content="Gate Rotation (°):" Grid.Row="2" Grid.Column="0" VerticalAlignment="Center"/>
                                            <Label Content="Roll:" Grid.Row="2" Grid.Column="1" VerticalAlignment="Center"/>
                                            <TextBox Grid.Row="2" Grid.Column="2"
                                                    Style="{StaticResource RotationTextBoxStyle}"
                                                    Text="{Binding GatesConnectionCurrent.GateDirect.Rotation.Roll, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <Label Content="Pitch:" Grid.Row="2" Grid.Column="3" VerticalAlignment="Center"/>
                                            <TextBox Grid.Row="2" Grid.Column="4"
                                                    Style="{StaticResource RotationTextBoxStyle}"
                                                    Text="{Binding GatesConnectionCurrent.GateDirect.Rotation.Pitch, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <Label Content="Yaw:" Grid.Row="2" Grid.Column="5" VerticalAlignment="Center"/>
                                            <TextBox Grid.Row="2" Grid.Column="6"
                                                    Style="{StaticResource RotationTextBoxStyle}"
                                                    Text="{Binding GatesConnectionCurrent.GateDirect.Rotation.Yaw, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <Label Content="Gate Active:" Grid.Row="3" Grid.Column="0" VerticalAlignment="Center"/>
                                            <CheckBox Grid.Row="3" Grid.Column="1" VerticalAlignment="Center"
                                                    IsChecked="{Binding GatesConnectionCurrent.GateDirect.Active, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <Label Content="Gate Macro:" Grid.Row="3" Grid.Column="2" VerticalAlignment="Center"/>
                                            <ComboBox HorizontalAlignment="Stretch" MinWidth="100" Margin="5" Grid.Row="3" Grid.Column="3" Grid.ColumnSpan="4"
                                                SelectedItem="{Binding GatesConnectionCurrent.GateDirect.GateMacro, Mode=TwoWay}"
                                                ItemsSource="{Binding GateMacros}" />
                                        </Grid>
                                    </GroupBox>
                                </StackPanel>
                            </GroupBox>
                            <GroupBox Header="Gate Opposite" Grid.Column="1" Margin="5">
                                <StackPanel>
                                    <Grid Margin="5">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Label Content="Sector:" Grid.Column="0" VerticalAlignment="Center"/>
                                        <!-- Sector Opposite ComboBox -->
                                        <ComboBox
                                            x:Name="SectorOppositeComboBox"
                                            Margin="5"
                                            Grid.Column="1"
                                            ItemsSource="{Binding SectorsOppositeViewSource.View}"
                                            SelectedItem="{Binding GatesConnectionCurrent.SectorOpposite, Mode=TwoWay}"
                                            SelectedValuePath="Macro"
                                            ItemTemplate="{StaticResource SectorTemplate}" />
                                    </Grid>
                                    <GroupBox Header="Sector Info" Margin="5">
                                        <DockPanel>
                                            <Canvas x:Name="SectorOppositeCanvas" Background="Black" DockPanel.Dock="Left" Width="200" Height="200" Margin="5"
                                                SizeChanged="SectorOppositeCanvas_SizeChanged">
                                                <!-- Hexagonal Sector Representation -->
                                                <Polygon x:Name="SectorOppositeHexagon" Points="{Binding GatesConnectionCurrent.SectorOppositeMap.VisualSizePx, Converter={StaticResource HexagonPointsConverter}}"
                                                        Stroke="White"
                                                        StrokeThickness="2"
                                                        Fill="Gray"
                                                        Canvas.Left="{Binding GatesConnectionCurrent.SectorOppositeMap.VisualX}"
                                                        Canvas.Top="{Binding GatesConnectionCurrent.SectorOppositeMap.VisualY}" />
                                                <!-- Gates Representation -->
                                                <ItemsControl ItemsSource="{Binding GatesConnectionCurrent.SectorOppositeMap.Items}">
                                                    <ItemsControl.ItemsPanel>
                                                        <ItemsPanelTemplate>
                                                            <Canvas />
                                                        </ItemsPanelTemplate>
                                                    </ItemsControl.ItemsPanel>
                                                    <ItemsControl.ItemTemplate>
                                                        <DataTemplate>
                                                            <Ellipse Width="{Binding ItemSizePx}" Height="{Binding ItemSizePx}"
                                                                    Fill="{Binding FillColor}"
                                                                    Stroke="{Binding BorderColor}"
                                                                    StrokeThickness="2"
                                                                    PreviewMouseLeftButtonDown="SectorOppositeMapItem_MouseLeftButtonDown"
                                                                    MouseMove="SectorOppositeMapItem_MouseMove"
                                                                    MouseLeftButtonUp="SectorOppositeMapItem_MouseLeftButtonUp">
                                                                    <!-- by some reason this binding doesn't work
                                                                    Canvas.Left="{Binding X}"
                                                                    Canvas.Top="{Binding Y}"
                                                                    -->
                                                                <Ellipse.RenderTransform>
                                                                    <TranslateTransform X="{Binding X}" Y="{Binding Y}" />
                                                                </Ellipse.RenderTransform>
                                                                <Ellipse.ToolTip>
                                                                    <ToolTip Content="{Binding ToolTip}" />
                                                                </Ellipse.ToolTip>
                                                            </Ellipse>
                                                        </DataTemplate>
                                                    </ItemsControl.ItemTemplate>
                                                </ItemsControl>
                                            </Canvas>
                                            <DataGrid ItemsSource="{Binding GatesConnectionCurrent.SectorOppositeConnections}"
                                                      SelectedItem="{Binding GatesConnectionCurrent.SectorOppositeSelectedConnection, Mode=TwoWay}"
                                                      ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                                      AutoGenerateColumns="False"
                                                      Margin="5"
                                                      CanUserAddRows="False"
                                                      IsReadOnly="True"
                                                      SelectionMode="Single"
                                                      MinHeight="160">
                                                <DataGrid.Columns>
                                                    <DataGridTextColumn Header="To Sector" Binding="{Binding ToSector}" Width="200"/>
                                                    <DataGridTextColumn Header="X" Binding="{Binding X}" Width="40" ElementStyle="{StaticResource RightAlignedTextBlockStyle}" HeaderStyle="{StaticResource DataGridCenterColumnHeaderStyle}"/>
                                                    <DataGridTextColumn Header="Y" Binding="{Binding Y}" Width="40" ElementStyle="{StaticResource RightAlignedTextBlockStyle}" HeaderStyle="{StaticResource DataGridCenterColumnHeaderStyle}"/>
                                                    <DataGridTextColumn Header="Z" Binding="{Binding Z}" Width="40" ElementStyle="{StaticResource RightAlignedTextBlockStyle}" HeaderStyle="{StaticResource DataGridCenterColumnHeaderStyle}"/>
                                                    <DataGridTextColumn Header="Type" Binding="{Binding Type}" Width="50"/>
                                                    <DataGridTextColumn Header="Id" Binding="{Binding Id}" Width="200"/>
                                                </DataGrid.Columns>
                                            </DataGrid>
                                        </DockPanel>
                                    </GroupBox>
                                    <GroupBox Header="Gate Parameters" Margin="5">
                                        <Grid Margin="5">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Label Content="Gate Coordinates (km):" Grid.Row="0" Grid.Column="0" VerticalAlignment="Center"/>
                                            <Label Content="X:" Grid.Row="0" Grid.Column="1" VerticalAlignment="Center"/>
                                            <TextBox Grid.Row="0" Grid.Column="2"
                                                    Style="{StaticResource CoordinatesTextBoxStyle}"
                                                    Text="{Binding GatesConnectionCurrent.GateOpposite.Coordinates.X, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <Label Content="Y:" Grid.Row="0" Grid.Column="3" VerticalAlignment="Center"/>
                                            <TextBox Grid.Row="0" Grid.Column="4"
                                                    Style="{StaticResource CoordinatesTextBoxStyle}"
                                                    Text="{Binding GatesConnectionCurrent.GateOpposite.Coordinates.Y, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <Label Content="Z:" Grid.Row="0" Grid.Column="5" VerticalAlignment="Center"/>
                                            <TextBox Grid.Row="0" Grid.Column="6"
                                                    Style="{StaticResource CoordinatesTextBoxStyle}"
                                                    Text="{Binding GatesConnectionCurrent.GateOpposite.Coordinates.Z, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <Label Content="Gate Position (m):" Grid.Row="1" Grid.Column="0" VerticalAlignment="Center"/>
                                            <Label Content="X:" Grid.Row="1" Grid.Column="1" VerticalAlignment="Center"/>
                                            <TextBox Grid.Row="1" Grid.Column="2"
                                                    Style="{StaticResource PositionTextBoxStyle}"
                                                    Text="{Binding GatesConnectionCurrent.GateOpposite.Position.X, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <Label Content="Y:" Grid.Row="1" Grid.Column="3" VerticalAlignment="Center"/>
                                            <TextBox Grid.Row="1" Grid.Column="4"
                                                    Style="{StaticResource PositionTextBoxStyle}"
                                                    Text="{Binding GatesConnectionCurrent.GateOpposite.Position.Y, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <Label Content="Z:" Grid.Row="1" Grid.Column="5" VerticalAlignment="Center"/>
                                            <TextBox Grid.Row="1" Grid.Column="6"
                                                    Style="{StaticResource PositionTextBoxStyle}"
                                                    Text="{Binding GatesConnectionCurrent.GateOpposite.Position.Z, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <Label Content="Gate Rotation (°):" Grid.Row="2" Grid.Column="0" VerticalAlignment="Center"/>
                                            <Label Content="Roll:" Grid.Row="2" Grid.Column="1" VerticalAlignment="Center"/>
                                            <TextBox Grid.Row="2" Grid.Column="2"
                                                    Style="{StaticResource RotationTextBoxStyle}"
                                                    Text="{Binding GatesConnectionCurrent.GateOpposite.Rotation.Roll, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <Label Content="Pitch:" Grid.Row="2" Grid.Column="3" VerticalAlignment="Center"/>
                                            <TextBox Grid.Row="2" Grid.Column="4"
                                                    Style="{StaticResource RotationTextBoxStyle}"
                                                    Text="{Binding GatesConnectionCurrent.GateOpposite.Rotation.Pitch, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <Label Content="Yaw:" Grid.Row="2" Grid.Column="5" VerticalAlignment="Center"/>
                                            <TextBox Grid.Row="2" Grid.Column="6"
                                                    Style="{StaticResource RotationTextBoxStyle}"
                                                    Text="{Binding GatesConnectionCurrent.GateOpposite.Rotation.Yaw, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <Label Content="Gate Active:" Grid.Row="3" Grid.Column="0" VerticalAlignment="Center"/>
                                            <CheckBox Grid.Row="3" Grid.Column="1" VerticalAlignment="Center"
                                                    IsChecked="{Binding GatesConnectionCurrent.GateOpposite.Active, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <Label Content="Gate Macro:" Grid.Row="3" Grid.Column="2" VerticalAlignment="Center"/>
                                            <ComboBox HorizontalAlignment="Stretch" MinWidth="100" Margin="5" Grid.Row="3" Grid.Column="3" Grid.ColumnSpan="4"
                                                SelectedItem="{Binding GatesConnectionCurrent.GateOpposite.GateMacro, Mode=TwoWay}"
                                            ItemsSource="{Binding GateMacros}" />
                                        </Grid>
                                    </GroupBox>
                                </StackPanel>
                            </GroupBox>
                        </Grid>
                        <StackPanel Orientation="Horizontal" Margin="0" HorizontalAlignment="Right">
                            <Button x:Name="ButtonReset"
                                    Content="Reset"
                                    Margin="0,0,5,0"
                                    Width="100"
                                    IsEnabled="{Binding GatesConnectionCurrent.IsChanged}"
                                    Click="ButtonReset_Click"/>
                            <Button x:Name="ButtonSave"
                                    Content="{Binding ButtonSaveContent}"
                                    Margin="5,0,0,0"
                                    Width="100"
                                    IsEnabled="{Binding GatesConnectionCurrent.IsReadyToSave}"
                                    Click="ButtonSave_Click"/>
                        </StackPanel>
                        </StackPanel>
                    </GroupBox>
                    <GroupBox Header="Gate Connections" DockPanel.Dock="Top" Margin="5" MinHeight="125" VerticalAlignment="Stretch">
                        <Grid Margin="5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="120" />
                            </Grid.ColumnDefinitions>
                            <DataGrid ItemsSource="{Binding GalaxyConnections}"
                                    SelectedItem="{Binding CurrentGalaxyConnection, Mode=TwoWay}"
                                    ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                    AutoGenerateColumns="False"
                                    HorizontalAlignment="Stretch"
                                    Margin="5"
                                    CanUserAddRows="False"
                                    IsReadOnly="True"
                                    SelectionMode="Single"
                                    MinHeight="80">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="From Sector" Binding="{Binding SectorDirectName}" Width="*"/>
                                    <DataGridTextColumn Header="X,km" Binding="{Binding GateDirectX}" Width="*"/>
                                    <DataGridTextColumn Header="Y,km" Binding="{Binding GateDirectY}" Width="*"/>
                                    <DataGridTextColumn Header="Z,km" Binding="{Binding GateDirectZ}" Width="*"/>
                                    <DataGridTextColumn Header="Active" Binding="{Binding GateDirectActive}" Width="*"/>
                                    <DataGridTextColumn Header="To Sector" Binding="{Binding SectorOppositeName}" Width="*"/>
                                    <DataGridTextColumn Header="X,km" Binding="{Binding GateOppositeX}" Width="*"/>
                                    <DataGridTextColumn Header="Y,km" Binding="{Binding GateOppositeY}" Width="*"/>
                                    <DataGridTextColumn Header="Z,km" Binding="{Binding GateOppositeZ}" Width="*"/>
                                    <DataGridTextColumn Header="Active" Binding="{Binding GateOppositeActive}" Width="*"/>
                                </DataGrid.Columns>
                            </DataGrid>
                            <StackPanel Orientation="Vertical" Grid.Column="1" Margin="5">
                                <Button x:Name="ButtonGateNew" Content="New Gate" Margin="0,0,0,5" Width="100" IsEnabled="{Binding IsGateCanBeCreated}"/>
                                <Button x:Name="ButtonGateDelete" Content="Delete Gate" Margin="0,5,0,0" Width="100" IsEnabled="{Binding IsGateCanBeDeleted}"/>
                            </StackPanel>
                        </Grid>
                    </GroupBox>
                </DockPanel>
            </GroupBox>
        </DockPanel>
    </DockPanel>
</Window>
